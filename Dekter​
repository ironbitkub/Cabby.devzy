-- Load UI Library
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/x2zu/OPEN-SOURCE-UI-ROBLOX/refs/heads/main/X2ZU%20UI%20ROBLOX%20OPEN%20SOURCE/DummyUi-leak-by-x2zu/fetching-main/Tools/Framework.luau"))()

-- Create Main Window
local Window = Library:Window({
    Title = "project hub [Premium] v1.0",
    Desc = "by Ice devz",
    Icon = 105059922903197,
    Theme = "Dark",
    Config = {
        Keybind = Enum.KeyCode.LeftControl,
        Size = UDim2.new(0, 500, 0, 400)
    },
    CloseUIButton = {
        Enabled = true,
        Text = "Ter"
    }
})

local Players = game:GetService("Players")
local Player = Players.LocalPlayer
local Workspace = game:GetService("Workspace")
local UIS = game:GetService("UserInputService")

----------------------------------------------------
-- Tab: Main
----------------------------------------------------
local TabMain = Window:Tab({Title = "Main", Icon = "star"}) do
    -- KillAura[BETA]
    local killAuraActive = false
    local function toggleKillAura(state)
        killAuraActive = state
        if state then
            spawn(function()
                while killAuraActive do
                    task.wait(0.1)
                    if Player.Character and Player.Character:FindFirstChild("HumanoidRootPart") then
                        local rootPos = Player.Character.HumanoidRootPart.Position
                        for _, mob in pairs(Workspace:GetChildren()) do
                            if mob:IsA("Model") and mob.Name == "Bunny" then
                                local parts = {}
                                for _, v in pairs(mob:GetDescendants()) do
                                    if v:IsA("BasePart") then table.insert(parts, v.Position) end
                                end
                                if #parts > 0 then
                                    local mobPos = Vector3.new(0,0,0)
                                    for _, p in pairs(parts) do mobPos = mobPos + p end
                                    mobPos = mobPos / #parts
                                    if (mobPos - rootPos).Magnitude <= 1000 then
                                        if mob:FindFirstChild("Humanoid") then
                                            mob.Humanoid.Health = math.max(mob.Humanoid.Health - 25,0)
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end)
        end
    end

    TabMain:Toggle({
        Title = "KillAura [BETA]",
        Desc = "",
        Value = false,
        Callback = toggleKillAura
    })

    -- Place Wood in Fire [BETA]
    local woodFireActive = false
    local function togglePlaceWoodInFire(state)
        woodFireActive = state
        if state then
            spawn(function()
                while woodFireActive do
                    task.wait(0.1)
                    if Workspace:FindFirstChild("Items") then
                        for _, item in pairs(Workspace.Items:GetChildren()) do
                            if item.Name=="Log" or item.Name=="Coal" or item.Name=="Oil Barrel" or item.Name=="Fuel Canister" then
                                if item:IsA("Model") then
                                    local primaryPart = item.PrimaryPart or item:FindFirstChildWhichIsA("BasePart")
                                    if primaryPart then
                                        item.PrimaryPart = primaryPart
                                        item:SetPrimaryPartCFrame(CFrame.new(25,5,25))
                                    end
                                elseif item:IsA("BasePart") then
                                    item.CFrame = CFrame.new(25,5,25)
                                end
                            end
                        end
                    end
                end
            end)
        end
    end

    TabMain:Toggle({
        Title = "Place Wood in Fire [BETA]",
        Desc = "",
        Value = false,
        Callback = togglePlaceWoodInFire
    })
end

----------------------------------------------------
-- Tab: Player
----------------------------------------------------
local TabPlayer = Window:Tab({Title = "Player", Icon = "user"}) do
    TabPlayer:Toggle({
        Title = "WalkSpeed",
        Desc = "",
        Value = false,
        Callback = function(state)
            local h = Player.Character and Player.Character:FindFirstChild("Humanoid")
            if h then h.WalkSpeed = state and 100 or 16 end
        end
    })

    TabPlayer:Toggle({
        Title = "JumpPower",
        Desc = "",
        Value = false,
        Callback = function(state)
            local h = Player.Character and Player.Character:FindFirstChild("Humanoid")
            if h then h.UseJumpPower = true h.JumpPower = state and 100 or 50 end
        end
    })

    TabPlayer:Toggle({
        Title = "Infinite Jump",
        Desc = "",
        Value = false,
        Callback = function(state)
            local conn
            if state then
                conn = UIS.JumpRequest:Connect(function()
                    if Player.Character and Player.Character:FindFirstChild("Humanoid") then
                        Player.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
                    end
                end)
            else
                if conn then conn:Disconnect() end
            end
        end
    })

    TabPlayer:Toggle({
        Title = "Light",
        Desc = "",
        Value = false,
        Callback = function(state)
            if state then
                local light = Instance.new("PointLight")
                light.Name = "BodyLight"
                light.Parent = Player.Character:WaitForChild("HumanoidRootPart")
                light.Brightness = 10
                light.Range = 200
            else
                if Player.Character and Player.Character:FindFirstChild("HumanoidRootPart") then
                    local l = Player.Character.HumanoidRootPart:FindFirstChild("BodyLight")
                    if l then l:Destroy() end
                end
            end
        end
    })
end

----------------------------------------------------
-- Tab: Teleport
----------------------------------------------------
local TabTeleport = Window:Tab({Title = "Teleport", Icon = "map"}) do
    TabTeleport:Button({
        Title = "TP to Camp",
        Desc = "",
        Callback = function()
            if Player.Character and Player.Character:FindFirstChild("HumanoidRootPart") then
                Player.Character.HumanoidRootPart.CFrame = CFrame.new(0,5,0)
            end
        end
    })
end

----------------------------------------------------
-- Tab: Bring
----------------------------------------------------
local TabBring = Window:Tab({Title = "Bring", Icon = "package"}) do
    local function bringItem(itemName)
        spawn(function()
            while true do
                task.wait(0.1)
                if Workspace:FindFirstChild("Items") and Player.Character and Player.Character:FindFirstChild("HumanoidRootPart") then
                    for _, item in pairs(Workspace.Items:GetChildren()) do
                        if item.Name == itemName then
                            if item:IsA("Model") then
                                local primaryPart = item.PrimaryPart or item:FindFirstChildWhichIsA("BasePart")
                                if primaryPart then
                                    item.PrimaryPart = primaryPart
                                    item:SetPrimaryPartCFrame(CFrame.new(Player.Character.HumanoidRootPart.Position))
                                end
                            elseif item:IsA("BasePart") then
                                item.CFrame = CFrame.new(Player.Character.HumanoidRootPart.Position)
                            end
                        end
                    end
                end
            end
        end)
    end

    TabBring:Button({
        Title = "Bring Bandage",
        Desc = "",
        Callback = function() bringItem("Bandage") end
    })

    TabBring:Button({
        Title = "Bring Berry",
        Desc = "",
        Callback = function() bringItem("Berry") end
    })

    TabBring:Button({
        Title = "Bring Carrot",
        Desc = "",
        Callback = function() bringItem("Carrot") end
    })
end

----------------------------------------------------
-- Tab: Misc
----------------------------------------------------
local TabMisc = Window:Tab({Title = "Misc", Icon = "settings"}) do
    TabMisc:Section({Title = "Coming Soon..."})
end
